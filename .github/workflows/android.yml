name: Android CI

on:
  # runs the check once at mid night
  schedule:
  - cron: "0 0 * * *"
  
  push:
    branches: [ "main" ]
    
  pull_request:
    branches: [ "main" ]

jobs:
  # Builds the app on multiple platforms
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build

  # runs the lint and upload the reports
  test:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run Linter and Test
        run: ./gradlew check
      - name: Run Ktlint
        run: ./gradlew ktlintCheck --continue
      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: Test-Reports
          path: app/build/reports
        if: always()
        
  # runs ui tests and uploads reports to artifacts       
  run-ui-tests:
    runs-on: macOs-latest
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run UI test
        uses: ReactiveCircus/android-emulator-runner@v2.28.0
        with:
          api-level: 29
          script: ./gradlew connectedDebugAndroidTest
      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: UI-Test-Reports
          path: app/build/reports
 
  # Publish the app to the artifacts
  publish:
    runs-on: ubuntu-latest
    needs: [build, test, run-ui-tests]
    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v2
        with:
          name: APK
          path: app/build/outputs/apk/debug/**.apk
          
  # Deploy docker image to docker hub
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test, run-ui-tests]
    if: github.event_name == 'pull_reqeust'
    steps:
      - uses: actions/checkout@v3
      - name: Docker Build & Push Action
        uses: mr-smithers-excellent/docker-build-push@v6.2
        with:
          image: yashbhalersl/ci-cd-demo-image-1
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
